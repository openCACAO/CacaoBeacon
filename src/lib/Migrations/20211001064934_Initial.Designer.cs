// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenCacao.CacaoBeacon;

namespace OpenCacao.CacaoBeacon.Migrations
{
    [DbContext(typeof(CBStorageSQLite.CBContext))]
    [Migration("20211001064934_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("OpenCacao.CacaoBeacon.RPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Key")
                        .HasColumnType("BLOB");

                    b.Property<ulong>("MAC")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Metadata")
                        .HasColumnType("BLOB");

                    b.Property<short>("RSSI_max")
                        .HasColumnType("INTEGER");

                    b.Property<short>("RSSI_min")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RPI");
                });

            modelBuilder.Entity("OpenCacao.CacaoBeacon.TEK", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Key")
                        .HasColumnType("BLOB");

                    b.Property<int>("RollingPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RollingStartIntervalNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TransmissionRiskLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TEK");
                });
#pragma warning restore 612, 618
        }
    }
}
